[Telnet]
command = telnet ${device.name} ${device.telnet_port}


[Common]

sshCommand = ssh ${device.username}@${device.name}

telnetCommand = telnet ${device.name} ${device.telnet_port}

# time period before checking if device response is complete 
responseCompleteTimePeriod = 1

# wait responseMaxWaitTime seconds for a device response before raising timeout event
responseMaxWaitTime = 2

# perform pattern exact match. Use with caution because
# all eventual patterns based on regular expressions match as strings and
# wont work as expected
exactPatternMatch = False
 
 [[events]]
 	[[[username_event]]]
  		pattern = ".* ENTER USERCODE:[ ]*"
  		states = GROUND
	
	[[[password_event]]]
		pattern = ".* password:[ ]*"
		states = GROUND, LOGIN

  [[transitions]]
    [[[usernameRequest]]]
		begin_state = GROUND
		event       = username_event
		action      = sendUsername
		end_state   = LOGIN

    [[[passwordRequest]]]
		begin_state = GROUND
		event       = password_event
		action      = sendPassword
		end_state   = USER_PROMPT

    [[[promptMatch]]]
		begin_state = USER_PROMPT
		event       = prompt-match
		action      = 
		end_state   = USER_PROMPT
		

[Linux]

# enable/disable prompt discovery
discoverPrompt = True

# if True disable another expect to check if more output arrived after 
# prompt match or the first expect loop timeout.
# In case discoverPrompt is True use prompt match to check if command output is complete
timeoutCheckOnOutputComplete = False

 [[events]]
 	[[[username_event]]]
  		pattern = ".* LINUX login:[ ]*"
  		states = GROUND, ENABLE

  [[transitions]]


[CiscoIOS]

# enable/disable prompt discovery
discoverPrompt = True
