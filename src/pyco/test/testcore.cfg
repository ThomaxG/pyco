[common]

sshCommand = ssh ${device.username}@${device.name}

telnetCommand = telnet ${device.name} ${device.telnet_port}

# time period before checking if device response is complete 
responseCompleteTimePeriod = 1

# wait waitTime seconds for a device response before raising timeout event
waitTime = 2

# perform pattern exact match. Use with caution because
# all eventual patterns based on regular expressions match as strings and
# wont work as expected
exactPatternMatch = False
 
 [[events]]
 
    [[[question]]]
    	pattern = "question 1: "
    	beginState   = USER_PROMPT
    	action  = send foo
    	
 
 	[[[username_event]]]
  		pattern     = ".* ENTER USERCODE:[ ]*"
  		beginState       = GROUND
		action      = sendUsername
		endState   = LOGIN
	
	[[[password_event]]]
		pattern     = ".* password:[ ]*"
		beginState       = GROUND, LOGIN
		action      = sendPassword
		endState   = USER_PROMPT
		
	[[[prompt-match]]]
		beginState      = GROUND
		endState  = USER_PROMPT

	[[[continue_connecting]]]
		pattern = 'continue connecting \(yes/no\)\?'
		beginState   = GROUND
		action  = send yes

	[[[permission_denied]]]
		pattern = 'Permission denied'
		action  = permissionDenied

		

[linux]

# enable/disable prompt discovery
discoverPrompt = True

# if True disable another expect to check if more output arrived after 
# prompt match or the first expect loop timeout.
# In case discoverPrompt is True use prompt match to check if command output is complete
timeoutCheckOnOutputComplete = False

 [[events]]
 	[[[username_event]]]
  		pattern = ".* LINUX login:[ ]*"
  		beginState = GROUND, ENABLE



[ciscoios]
	
# enable/disable prompt discovery
discoverPrompt = True

